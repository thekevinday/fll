# fss-0002

main:
  # initialize the firewall
  direction none
  action none

  rule -F
  rule -Z

  tool iptables
  rule -t nat -F
  rule -t mangle -F
  tool ip46tables

  # setup initial operations
  chain INPUT
  direction input
  action append

  # Enable ALL local connections (loopback)
  device lo
  chain OUTPUT
  direction output
  rule -j ACCEPT

  chain INPUT
  direction input
  rule -j ACCEPT
  device all


  # Drop all INVALID packets so they aren't even processed
  chain OUTPUT
  rule -m state --state INVALID -j DROP

  chain INPUT
  rule -m state --state INVALID -j DROP


  # Drop multicasts and broadcasts, they should not exist for a router and in most cases should be avoided.
  # unicasts are the normal behavior and blocking them would be very unusual.
  chain OUTPUT
  rule -m pkttype --pkt-type broadcast -j output-casting
  rule -m pkttype --pkt-type multicast -j output-casting
  #rule -m pkttype --pkt-type unicast -j output-casting
  chain INPUT
  rule -m pkttype --pkt-type broadcast -j input-casting
  rule -m pkttype --pkt-type multicast -j input-casting
  #rule -m pkttype --pkt-type unicast -j input-casting


  # Allow ALL input&output connections that have already been established by this host (using conntrack might be more efficient)
  chain OUTPUT
  rule -m state --state ESTABLISHED,RELATED -j ACCEPT
  #rule -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

  chain INPUT
  rule -m state --state ESTABLISHED,RELATED -j ACCEPT
  #rule -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT


  # send all tcp packets to the tcp queue
  chain OUTPUT
  protocol tcp
  rule -m state --state NEW -j output-tcp

  chain INPUT
  rule -m state --state NEW -j input-tcp


  # send all udp packets to the udp queue
  chain OUTPUT
  protocol udp
  rule -m state --state NEW -j output-udp

  chain INPUT
  rule -m state --state NEW -j input-udp


  # send all ipv4 icmp packets to the icmp queue
  tool iptables
  chain OUTPUT
  protocol icmp
  rule -m state --state NEW -j output-icmp

  chain INPUT
  rule -m state --state NEW -j input-icmp

  # send all ipv6 icmp packets to the icmp queue (alternatively put this in its own chain, such as input-icmpv6 and output-icmpv6)
  tool ip6tables
  chain OUTPUT
  protocol icmpv6
  rule -m state --state NEW -j output-icmp

  chain INPUT
  rule -m state --state NEW -j input-icmp


input-tcp:
  direction input
  protocol tcp

  # Prevent an XMAS attack
  rule --tcp-flags ALL ALL -j DROP

  # Prevent NULL attack
  rule --tcp-flags ALL NONE -j DROP


input-udp:
  direction input
  protocol udp

  # Allow dhcp client renewals (from server to client). If these are blocked, you will not be able to renew easily
  tool iptables
  rule -s 0.0.0.0 --sport 67 -d 255.255.255.255 --dport 68 -j ACCEPT
  tool ip46tables


input-icmp:
  direction input
  protocol icmp


output-tcp:
  direction output
  protocol tcp


output-udp:
  direction output
  protocol udp


output-icmp:
  direction output
  protocol icmp


input-casting:
  # pre-process broadcasts and multicasts.
  direction input
  protocol none
  tool ip46tables

  # do not auto-drop dhcp messages sent from a dhcp server to a local dhcp client.
  # dhcp offer/acknowledge (the source address must be the routers address, so do not allow 0.0.0.0/0)
  protocol udp
  tool iptables
  rule --sport 67 -d 255.255.255.255 --dport 68 -j RETURN
  protocol none
  tool ip46tables

  # drop all remaining broadcasts and multicasts
  rule -j DROP


output-casting:
  # pre-process broadcasts and multicasts.
  direction output
  protocol none
  tool ip46tables

  # do not auto-drop dhcp client messages sent to a dhcp server.
  # dhcp discover/request (for the request, the dhcp server ip address is known but for some reason the dhcp standard states tat the src is 0.0.0.0.
  protocol udp
  tool iptables
  rule --sport 68 -d 255.255.255.255 --dport 67 -j RETURN
  protocol none
  tool ip46tables

  # drop all remaining broadcasts and multicasts
  rule -j DROP
