# fss-0002

Fakefile Specification:
  The "fakefile" file follows the FSS-0005 (Somewhat Basic List) format with a sub-fomat of IKI-0002 (Simple Script).

  A fakefile is broken up into multiple Basic Lists, referred to as Sections, with two special purpose reserved Sections.
  The Sections are broken up into multiple Extended Objects and their respective Contents, referred to as Section Operations.

  Each of these non-reserved Sections acts as a set to perform some set of Section Operations.
  Each of these Section Operations perform a single command or action based on a set of reserved Section Operation types.
  Each of these Section Operations have a set of Arguments associated with them.

  How these Arguments are interpreted and processed are specific to each Operation type.
  The Section Operations are represented by the Extended Object name and the Extended Content represents the Operation Arguments.
  Each of these Section Operations support IKI variable substitution within their respective Arguments.
  The Operation Extended Object does not support IKI variable substitution.
  The reserved Settings Section does not support IKI variable substitution.

  The IKI-0002 vocabulary context is further clarified as follows\:
  - define: the value must be a case-sensitive valid environment variable name (alpha-numeric or underscore, but no leading digits).
  - parameter: the value is a case-sensitive variable name.

  The reserved Section Objects are\:
  - settings: contains a list of Settings Objects and Content in FSS-0001 (Extended) format.
  - main: contains a list of Operation Objects and Content in FSS-0001 (Extended) format.

  The Settings Objects are\:
  - archiver: Only one Content, which must only be a valid filename.
  - compiler: Only one Content, which must only be a valid filename.
  - define: First Content represents variable name (case-sensitive), remaining Content represents varaiable value for IKI substitution.
  - environment: Zero or more Content representing valid environment variable names (alpha-numeric with underscore, but cannot begin with a number).
  - fail: Only one Content, which must be either "exit", "warn" or "ignore" (quotes not required) (case-sensitive).
  - load_build: Only one Content, which must be either "yes" or "no" (quotes not required) (case-sensitive).
  - parameter: First Content represents variable name (case-sensitive), remaining Content represents varaiable value for IKI substitution.

  The build settings may also be specified in the Settings Section.

  The Section Operation Objects are\:
  - archive: One or more Content.
  - break: Zero or One Content. If specified, First content must be one of "success" or "failure".
  - build: Zero or One Content. First Content represents file name of the settings file to use.
  - clean: Zero Content.
  - compile: One or more Content as parameters to compiler.
  - define: Two or more Content.
  - delete: One or more Content representing paths to files.
  - deletes: One or more Content representing paths to files.
  - else: Zero Content.
  - exit: Zero or One Content. If specified, First content must be one of "succeed" or "fail".
  - fail: One Content. First Content must be one of "exit", "warn", or "ignore" (case-sensitive).
  - group: Two or more Content. First Content is group name or number, remaining Content are paths to files.
  - groups: Two or more Content. First Content is group name or number, remaining Content are paths to files.
  - if: One or more Content. First Content is the condition, remaining Content are specific to the condition.
  - link: Two Content. First Content is the link target file and second Content is the pointer file (the link).
  - mode: Two or more Content. First Content is the mode, remaining Content are paths to files.
  - modes: Two or more Content. First Content is the mode, remaining Content are paths to files.
  - operate: One Content. First Content is the name of a valid Section Object, except for the reserved Section Objects.
  - owner: Two or more Content. First Content is group name or number, remaining Content are paths to files.
  - owners: Two or more Content. First Content is group name or number, remaining Content are paths to files.
  - pop: Zero Content.
  - print: Zero or more Content.
  - run: One or more Content. First Content is the name of the program (or script) and all remaining Content are passed as arguments to the named program (or script).
  - shell: One or more Content. First Content is the file path of the program (or script) and all remaining Content are passed as arguments to the named program (or script).
  - skeleton: Zero Content.
  - to: One Content. First Content is the directory path.
  - top: Zero Content.
  - touch: Two or more Content. First content is one of "file" or "directory", remaining Content are paths to files.

  The "if" Section Operation conditions are\:
  - ==: Two or more Content.
  - >: Two or more Content.
  - <: Two or more Content.
  - >=: Two or more Content.
  - <=: Two or more Content.
  - <>: Two or more Content.
  - defined: First Content is either "parameter" or "environment". Second or more Content are valid names, such that for "parameter" it is a valid IKI name and for "environment" it is a valid environment variable name.
  - fail: has no other Content.
  - group: First Content is the name of a group. Second or more Content are paths to files.
  - is: First Content is a list of "block", "character", "directory", "fifo", "link", "regular" , or "socket" followed by "for" and then the Remaining Content that are paths to files.
  - mode: First Content is either "is" or "has". Second Content is a valid file mode. Third or more Content are paths to files.
  - owner: First Content is the name of an owner. Second or more Content are paths to files.
  - success: has no other Content.

  The "if" Section Operation conditions and numbers\:
    The numbers may be represented in any of the forms:
    1) decimal: all numbers without a base-type prefix are of base-type 10, referred to as decimal.
    2) binary: all numbers with the prefix "0b" (uppercase or lowercase 'b') are of base-type 2, referred to as binary.
    3) octal: all numbers with the prefix "0o" (that is zero followed by the letter o, uppercase or lowercase 'o') are of base-type 8, referred to as octal.
    4) duodecimal: all numbers with the prefix "0d" (uppercase or lowercase 'd') are of base-type 12, referred to as duodecimal.
    5) hexadecimal: all numbers with the prefix "0x" (uppercase or lowercase 'x') are of base-type 16, referred to as hexadecimal.

    (At this time) The numbers may be of a max value of 2^64, or 18446744073709551615, positive or negative.
    (At this time) The numbers may only be whole numbers.
    Note: there are plans to impose no limits on the number size or any decimal values, but this requires significant work is not to be implemented at this time.

    Only the following "if" Section Operation conditions operate using these numbers:
    - >
    - <
    - >=
    - <=
