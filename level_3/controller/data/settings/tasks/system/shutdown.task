# fss-000d
#
# Task for shutting down the system.

setting:
  name "Shutdown System"
  environment PATH
  script sh

argument:
  in time unit
  on date
  status
  cancel

help:
  This task shuts down the system after stopping all controlled processes.

  When no parameters are specified, the shutdown happens immediately.

  The following parameters are available:
    - in [time] [unit]: Shutdown after so many units of time have passed.
    - on [date]: Shutdown when a given date and time is reached.
    - status: Get the current state of the shutdown process.
    - cancel: Cancel the current shutdown process, if active.

help in:
  Shutdown after a specified amount of time is reached.

  This acts as a timeout that begins immediately upon execution.
  Once the timeout is reached, shutdown is performed.

  This command requires two additional parameters:
  1) A whole number representing the time.
  2) A unit of measurement, which must be one of:
    - millisecond.
    - second.
    - minute.
    - hour.
    - day.
    - week.
    - month.
    - year.
    - gigatime.
    - megatime.
    - kilotime.
    - decatime.
    - time.
    - gigaepochtime.
    - megaepochtime.
    - kiloepochtime.
    - decaepochtime.
    - epochtime.

help on:
  Shutdown when the specified date is reached.

  This acts as a trigger that waits for the given date and time of the system clock to be reached.
  If the clock is changed to on or after the specified date, this trigger is executed.

  This command requires one additional parameter:
  1) A date in ISO-8601 format.

  The date must be in ISO-8601 format, which looks like: "2006-08-14T02:34:56-06:00".
  The timezone offset is optional and if it is not provided, UTC is assumed.
  TODO: support Time units and date times: "2017:0000", "2017::0000".

  Both shutdown "on" and shutdown "in" may be specified.
  In which case the first one to happen will result in the shutdown.

help status:
  Get whether the shutdown is in progress or not and the current settings, if any.

help cancel:
  Cancel an existing shutdown process, if it is not too late.

script:
  in {
    shutdown in argument:"time" argument:"unit"
  }

  on {
    shutdown on argument:"date"
  }

  status {
    shutdown status
  }

  cancel {
    shutdown cancel
  }
