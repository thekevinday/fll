# fss-0002
#
# license: open-standard-license-1.0
#
# A "Task" is not fully implemented but is provided as a proposal for consideration and is subject to completion or removal.
# Ideally, a task will be used to replace hardcoded "init" mode operations like "kexec", "reboot", and "shutdown".

Task Documentation:
  This describes the intent and purpose of a Task file.

  A Task file, such as "reboot.task", is intended to designate a command for a user-space program, such as "control", to execute.

  The Task file is read top-down, except for the reserved outer most lists "argument", "help", and "setting".

  Similar to a Rule Types, the Task file utilizes Task Types for performing the execution.

  Unlike a Rule Type, the Task Type names are represented by the arguments passed to the task.

  Each Task allows only a single execution instance.

  The task "controller" is reserved for use by the Controller program and provides special commands for manipulating the Controller program.
  These are:
    - exit: Stop the Controller program and activate the exit cycle.
    - rule: Perform a Rule-specific operations, such as starting and stopping a Rule. ([stop|start|etc..] rule [rule_path] [rule_name]).
    - status: Get information about the Controller, a Task, or a Rule. (status, status rule [rule_path] [rule_name], status task [task_path] [task_name]).
  When [rule_path] or [task_path] is not specified, all Rules or Tasks already loaded with this name are used.

  The following reserved outer lists are available\:
    - parameter.
    - help.
    - setting.

  The following Task Types are supported:
    - Command.
    - Script.

  Arguments describe parameters

  The help outer list represents the message returned when help is requested.
