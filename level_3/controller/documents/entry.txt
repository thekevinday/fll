# fss-0002

Entry Documentation:
  This describes the intent and purpose of the entry file settings.

  An entry file, such as "default.entry", is intended to store a set of rules in which the controller will process on execution.
  These are almost always meant for booting a system.

  The "main" Basic List Object is always executed first (Therefore "main" is required).
  All other Basic List Objects are not executed unless either a "category" or a "failsafe" specifies the Object.
  Execution of all Basic List Objects is top-down.

  Inside each list there are additional commands: "category", "failsafe", "rule", and "timeout".

  The "category" command accepts only a valid Basic List Object in which will be immediately executed.

  The "failsafe" command accepts only a valid Basic List Object in which will be executed when a failure is detected.
  Only a single "failsafe" command may exist at a time so when specified multiple times.
  Each time a "failsafe" command is specified, it replaces the previous "failsafe" command.

  The "only" command represents a list of directory names that are allowed to be "controlled" by the "control" program from user-space.
  To allow all rules in all directories, do not specify the "omit" command.
  To disallow all rules in all directories, specify this command and provide no directoies.
  Each directory is relative to the settings, such that if the controller rule settings are found in "/etc/controller/rules/", then for a directory called "[directory]" would have a resulting path of: "/etc/controller/rules/[directory]/".

  The "rule" command immediately executes a given rule file.
  The first Content represents the directory in which the rule is to be found (do not include leading or trailing slashes in the name).
  The second Content represents the basename for the file representing the desired rule.
  The directory is relative to the settings, such that if the controller rule settings are found in "/etc/controller/rules/", then for a directory called "[directory]" and a rule basename of "[filename]", the resulting path would be: "/etc/controller/rules/[directory]/[filename].rule"
  The remaining Content may be specified in any order\:
  - "asynchronous": Designates that execution will not block (wait).
  - "require": Designates that this rule must succeed or trigger execution of failsafe.
  - "wait": Designates that this rule will not execute until all other existing "asynchronous" executions complete.

  It is important to note that for any given rule, execution within that rule may be internally asynchronous.
  For example, a service that is often called a daemon will execute in the background.
  Until that execution succeeds and the daemon goes into the background the representing rule will block.
  After the daemon goes into the background, then the representing rule will return success.

  The "timeout" command provides default global settings for each of the three special situations: "start", "stop", and "kill".
  Each of these may only have a single one exist at a time (one "start", one "stop", and one "kill").
  Each of these will replace any previously specified setting.
  Each of these accepts a single Content that is a 0 or greater whole number representing the number of milliseconds.
  For "start", this represents the number of milliseconds to wait after starting some rule before assuming something went wrong and the rule is returned as failed.
  For "stop", this represents the number of milliseconds to wait after stopping some rule before assuming something went wrong and the rule is returned as failed.
  For "kill", this represents the number of milliseconds to wait after stopping some rule and that rule has not yet stopped to forcefully stop the rule (aka kill the rule).
  The timeouts are generally only valid for services such as daemon services.
  A value of 0 disables this (prevents any action).
