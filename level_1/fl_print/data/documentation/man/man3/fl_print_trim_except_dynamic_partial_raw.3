.TH fl_print_trim_except_dynamic_partial_raw "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fl_print_trim_except_dynamic_partial_raw
.SH SYNOPSIS
.nf
.B #include <fll/level_1/print.h>
.sp
\fBf_status_t fl_print_trim_except_dynamic_partial_raw\fP(
    \fBconst f_string_static_t \fP\fIbuffer\fP,
    \fBconst f_string_range_t  \fP\fIrange\fP,
    \fBconst f_array_lengths_t \fP\fIexcept\fP,
    \fBFILE *const             \fP\fIstream\fP
);
.fi
.SH DESCRIPTION
.PP
Print a partial dynamic string, stripping leading and trailing whitespace.
.PP
Except for leading/trailing whitespace, the string is printed as-is without interpretation.
.PP
Will not stop at NULL. Will print NULL. Will not print any 1-byte character at a location specified in except array. Will print the only the buffer range specified by range, except for leading/trailing whitespace.
.PP
All UTF-8 characters, invalid or not, are printed as is, except for trimmed characters. Invalid UTF-8 characters are not considered whitespace for the purpose of trimming.
.PP
NULL characters are treated as whitespace for the purpose of trimming.
.PP
This print function does not use locking, be sure something like flockfile() and funlockfile() are appropriately called.
.SH PARAMETERS
.TP
.B buffer
The string to output.

.TP
.B range
The range within the provided string to print.

.TP
.B except
An array of locations within the given string to not print. The array of locations is required/assumed to be in linear order.

.TP
.B stream
The file stream to output to, including standard streams such as stdout and stderr.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP on success but there is nothing to print.
.br
\fBF_output\fP (with error bit) on error when printing to output.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_not\fP (with error bit) if character is an invalid UTF-8 character.
.br
Errors (with error bit) from: f_utf_is_combining().
.br
Errors (with error bit) from: f_utf_is_whitespace().
.SH SEE ALSO
.PP
.nh
.ad l
\fIfl_print_format\fP(3), \fIfl_print_format_convert\fP(3), \fIfl_print_string_va\fP(3), \fIfl_print_trim\fP(3), \fIfl_print_trim_dynamic\fP(3), \fIfl_print_trim_dynamic_partial\fP(3), \fIfl_print_trim_dynamic_partial_raw\fP(3), \fIfl_print_trim_dynamic_partial_raw_safely\fP(3), \fIfl_print_trim_dynamic_partial_safely\fP(3), \fIfl_print_trim_dynamic_raw\fP(3), \fIfl_print_trim_dynamic_raw_safely\fP(3), \fIfl_print_trim_dynamic_safely\fP(3), \fIfl_print_trim_except\fP(3), \fIfl_print_trim_except_dynamic\fP(3), \fIfl_print_trim_except_dynamic_partial\fP(3), \fIfl_print_trim_except_dynamic_partial_raw\fP(3), \fIfl_print_trim_except_dynamic_partial_raw_safely\fP(3), \fIfl_print_trim_except_dynamic_partial_safely\fP(3), \fIfl_print_trim_except_dynamic_raw\fP(3), \fIfl_print_trim_except_dynamic_raw_safely\fP(3), \fIfl_print_trim_except_dynamic_safely\fP(3), \fIfl_print_trim_except_in\fP(3), \fIfl_print_trim_except_in_dynamic\fP(3), \fIfl_print_trim_except_in_dynamic_partial\fP(3), \fIfl_print_trim_except_in_dynamic_partial_raw\fP(3), \fIfl_print_trim_except_in_dynamic_partial_raw_safely\fP(3), \fIfl_print_trim_except_in_dynamic_partial_safely\fP(3), \fIfl_print_trim_except_in_dynamic_raw\fP(3), \fIfl_print_trim_except_in_dynamic_raw_safely\fP(3), \fIfl_print_trim_except_in_dynamic_safely\fP(3), \fIfl_print_trim_except_in_raw\fP(3), \fIfl_print_trim_except_in_raw_safely\fP(3), \fIfl_print_trim_except_in_safely\fP(3), \fIfl_print_trim_except_raw\fP(3), \fIfl_print_trim_except_raw_safely\fP(3), \fIfl_print_trim_except_safely\fP(3), \fIfl_print_trim_raw\fP(3), \fIfl_print_trim_raw_safely\fP(3), \fIfl_print_trim_safely\fP(3), \fIf_utf_is_combining()\fP, \fIf_utf_is_whitespace()\fP, \fIfputc_unlocked()\fP, \fIf_utf_is_combining()\fP, \fIf_utf_is_whitespace()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
