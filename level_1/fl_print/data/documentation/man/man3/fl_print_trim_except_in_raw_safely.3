.TH fl_print_trim_except_in_raw_safely "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
fl_print_trim_except_in_raw_safely
.SH SYNOPSIS
.nf
.B #include <fll/level_1/print.h>
.sp
\fBf_status_t fl_print_trim_except_in_raw_safely\fP(
    \fBconst f_string_t        \fP\fIstring\fP,
    \fBconst f_array_length_t  \fP\fIoffset\fP,
    \fBconst f_array_length_t  \fP\fIlength\fP,
    \fBconst f_array_lengths_t \fP\fIexcept_at\fP,
    \fBconst f_string_ranges_t \fP\fIexcept_in\fP,
    \fBFILE *const             \fP\fIstream\fP
);
.fi
.SH DESCRIPTION
.PP
Print a string, stripping leading and trailing whitespace (and NULLs).
.PP
This is essentually a "safe" print that also prints NULL (except for trimmed NULLs).
.PP
Control characters are converted to the Unicode control character symbols, excluding NULL. UTF-8 sequences with invalid widths are converted to the unknown character 'ï¿½'.
.PP
Will not stop at NULL. Will print NULL (that are not trimmed). Will not print any 1-byte character at a location specified in except_at array. Will not print any 1-byte character within the ranges specified in except_in array.
.PP
NULL characters are treated as whitespace for the purpose of trimming.
.PP
This print function does not use locking, be sure something like flockfile() and funlockfile() are appropriately called.
.SH PARAMETERS
.TP
.B string
The string to output.

.TP
.B offset
The inclusive start point to start printing.

.TP
.B length
The total number of characters to print.

.TP
.B except_at
An array of locations within the given string to not print. The array of locations is required/assumed to be in linear order.

.TP
.B except_in
An array of ranges within the string to not print. The array of ranges is required/assumed to be in linear order.

.TP
.B stream
The file stream to output to, including standard streams such as stdout and stderr.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP on success but there is nothing to print.
.br
\fBF_output\fP (with error bit) on error when printing to output.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_not\fP (with error bit) if character is an invalid UTF-8 character.
.br
Errors (with error bit) from: f_utf_is_combining().
.br
Errors (with error bit) from: f_utf_is_valid()
.br
Errors (with error bit) from: f_utf_is_whitespace().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
