.TH fl_iki_read "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
fl_iki_read
.SH SYNOPSIS
.nf
.B #include <fll/level_1/iki.h>
.sp
\fBf_status_t fl_iki_read\fP(
    \fBconst f_state_t          \fP\fIstate\fP,
    \fBf_string_static_t *const \fP\fIbuffer\fP,
    \fBf_string_range_t *const  \fP\fIrange\fP,
    \fBf_iki_data_t *const      \fP\fIdata\fP
);
.fi
.SH DESCRIPTION
.PP
Provides a Wiki-Like syntax meant to be much simpler.
.PP
This simpler Wiki-Like syntax, called Iki, focuses just on simply adding context. The context itself is not explicitly defined but a few common standards are provided. Read all IKI Vocabulary and Content in the given range of the given buffer.
.PP
This does not verify if any vocabulary name is known. This only finds complete vocabulary names and their respective content.
.SH PARAMETERS
.TP
.B state
A state for providing flags and handling interrupts during long running operations.

.TP
.B buffer
The string to process.

.TP
.B range
The start/stop location within the buffer to be processed. The start location will be updated as the buffer is being processed. The start location will represent where the read stopped on return. A start location past the stop location or buffer used means that the entire range was processed.

.TP
.B data
The IKI data.

.SH RETURN VALUE
.PP
\fBF_none\fP on success and an IKI vocabulary name was found.
.br
\fBF_none_stop\fP on success and an IKI vocabulary name was found and stop point was reached.
.br
\fBF_none_eos\fP on success and an IKI vocabulary name was found and end of string was reached.
.br
\fBF_complete_not_utf_eos\fP on success and EOS was reached, but at an incomplete UTF-8 sequence.
.br
\fBF_complete_not_utf_stop\fP on success and stop point was reached, but at an incomplete UTF-8 sequence.
.br
\fBF_data_not_eos\fP on success and EOS was reached, but there were no IKI vocabularie names found.
.br
\fBF_data_not_stop\fP on success and stop point was reached, but there were no IKI vocabularie names found.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Success from: f_iki_read().
.br
Errors (with error bit) from: f_iki_read().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
