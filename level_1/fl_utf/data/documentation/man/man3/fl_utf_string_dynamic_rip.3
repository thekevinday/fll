.TH fl_utf_string_dynamic_rip "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fl_utf_string_dynamic_rip
.SH SYNOPSIS
.nf
.B #include <fll/level_1/utf.h>
.sp
\fBf_status_t fl_utf_string_dynamic_rip\fP(
    \fBconst f_utf_string_static_t   \fP\fIsource\fP,
    \fBconst f_string_range_t        \fP\fIrange\fP,
    \fBf_utf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Allocate a new UTF-8 string from the provided range in the buffer.
.PP
Ignores leading and trailing whitespace. As a result, resulting size may be smaller than requested range.
.SH PARAMETERS
.TP
.B source
The buffer to rip from.

.TP
.B range
A range within the buffer representing the string to rip.

.TP
.B destination
The new string, which will be allocated or reallocated as necessary.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if source length is 0.
.br
\fBF_data_not_stop\fP if range.start > range.stop.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_utf_string_append().
.SH SEE ALSO
.PP
.nh
.ad l
\fIfl_utf_string_compare\fP(3), \fIfl_utf_string_compare_trim\fP(3), \fIfl_utf_string_dynamic_compare\fP(3), \fIfl_utf_string_dynamic_compare_trim\fP(3), \fIfl_utf_string_dynamic_partial_compare\fP(3), \fIfl_utf_string_dynamic_partial_compare_trim\fP(3), \fIfl_utf_string_dynamic_rip\fP(3), \fIfl_utf_string_dynamic_rip_nulless\fP(3), \fIfl_utf_string_dynamic_seek_line_to_char\fP(3), \fIfl_utf_string_dynamic_seek_line_until_graph\fP(3), \fIfl_utf_string_dynamic_seek_line_until_graph_non\fP(3), \fIfl_utf_string_dynamic_seek_to_char\fP(3), \fIfl_utf_string_rip\fP(3), \fIfl_utf_string_rip_nulless\fP(3), \fIfl_utf_string_seek_line_to_char\fP(3), \fIfl_utf_string_seek_line_until_graph\fP(3), \fIfl_utf_string_seek_line_until_graph_non\fP(3), \fIfl_utf_string_seek_to_char\fP(3), \fIf_utf_string_append()\fP, \fIf_utf_string_append()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
