.TH fl_utf_string_dynamic_partial_compare "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
fl_utf_string_dynamic_partial_compare
.SH SYNOPSIS
.nf
.B #include <fll/level_1/utf.h>
.sp
\fBf_status_t fl_utf_string_dynamic_partial_compare\fP(
    \fBconst f_utf_string_static_t \fP\fIstring1\fP,
    \fBconst f_utf_string_static_t \fP\fIstring2\fP,
    \fBconst f_string_range_t      \fP\fIrange1\fP,
    \fBconst f_string_range_t      \fP\fIrange2\fP
);
.fi
.SH DESCRIPTION
.PP
Compare two UTF-8 strings, similar to strncmp(), but restricted to the given ranges.
.PP
This does not stop on NULL. NULL characters are ignored.
.SH PARAMETERS
.TP
.B string1
String to compare.

.TP
.B string2
String to compare.

.TP
.B range1
A range within the string1 to restrict the comparison to.

.TP
.B range2
A range within the string2 to restrict the comparison to.

.SH RETURN VALUE
.PP
\fBF_equal_to\fP when both strings equal.
.br
\fBF_equal_to_not\fP when both strings do not equal.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH SEE ALSO
.PP
.nh
.ad l
\fIfl_utf_string_compare\fP(3), \fIfl_utf_string_compare_trim\fP(3), \fIfl_utf_string_dynamic_compare\fP(3), \fIfl_utf_string_dynamic_compare_trim\fP(3), \fIfl_utf_string_dynamic_partial_compare\fP(3), \fIfl_utf_string_dynamic_partial_compare_trim\fP(3), \fIfl_utf_string_dynamic_rip\fP(3), \fIfl_utf_string_dynamic_rip_nulless\fP(3), \fIfl_utf_string_dynamic_seek_line_to_char\fP(3), \fIfl_utf_string_dynamic_seek_line_until_graph\fP(3), \fIfl_utf_string_dynamic_seek_line_until_graph_non\fP(3), \fIfl_utf_string_dynamic_seek_to_char\fP(3), \fIfl_utf_string_rip\fP(3), \fIfl_utf_string_rip_nulless\fP(3), \fIfl_utf_string_seek_line_to_char\fP(3), \fIfl_utf_string_seek_line_until_graph\fP(3), \fIfl_utf_string_seek_line_until_graph_non\fP(3), \fIfl_utf_string_seek_to_char\fP(3)
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
