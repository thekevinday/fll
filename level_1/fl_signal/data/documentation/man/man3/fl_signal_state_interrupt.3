.TH fl_signal_state_interrupt "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
fl_signal_state_interrupt
.SH SYNOPSIS
.nf
.B #include <fll/level_1/signal.h>
.sp
\fBf_status_t fl_signal_state_interrupt\fP(
    \fBvoid *const \fP\fIstate\fP,
    \fBvoid *const \fP\fIinternal\fP
);
.fi
.SH DESCRIPTION
.PP
Provides common signal functions. Check to see if a given signal is received.
.PP
Provides a simple interrupt checker for general use.
.PP
This is intended to be explicitly use for the interrupt() callback defined in f_state_t.
.PP
This check all interrupts provided in state->data.interrupts and if a signal is found, store that signal in state->data.trigger and returns
.SH PARAMETERS
.TP
.B state
state->data: Ignored.


.TP
.B internal
This is ignored.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_enable_not\fP on success but signals are not requested to be processed.
.br
\fBF_interrupt_not\fP on success and no requested signal was found.
.br
\fBF_interrupt\fP (with error bit set). If state->data.signal.id is NULL, then
.br
\fBF_enable_not\fP is returned.
.br
\fBF_interrupt\fP (with error bit) if a requested signal is confirmed to be found.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
