.TH fl_string_rip "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
fl_string_rip
.SH SYNOPSIS
.nf
.B #include <fll/level_1/string.h>
.sp
\fBf_status_t fl_string_rip\fP(
    \fBconst f_string_t          \fP\fIsource\fP,
    \fBconst f_array_length_t    \fP\fIlength\fP,
    \fBf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Allocate a new string from the provided range in the string.
.PP
Ignores leading and trailing whitespace. Ignores leading and trailing NULL characters. As a result, resulting size may be smaller than requested length.
.SH PARAMETERS
.TP
.B source
The string to rip from.

.TP
.B length
The length of source to append.

.TP
.B destination
The new string, which will be allocated or reallocated as necessary.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not_eos\fP if source length is 0.
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_parameter\fP (with error bit) from: f_utf_is_combining().
.br
\fBF_parameter\fP (with error bit) from: f_utf_is_whitespace().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
