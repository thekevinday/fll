.TH fl_string_dynamic_seek_line_to_utf_character "3" "July 2023" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fl_string_dynamic_seek_line_to_utf_character
.SH SYNOPSIS
.nf
.B #include <fll/level_1/string.h>
.sp
\fBf_status_t fl_string_dynamic_seek_line_to_utf_character\fP(
    \fBconst f_string_static_t \fP\fIbuffer\fP,
    \fBconst f_utf_char_t      \fP\fIseek_to_this\fP,
    \fBf_string_range_t *const \fP\fIrange\fP
);
.fi
.SH DESCRIPTION
.PP
Seek the buffer location forward until the character (up to 4-byte wide) or EOL is reached.
.SH PARAMETERS
.TP
.B buffer
The string to traverse.

.TP
.B seek_to_this
A 1-width, 2-width, 3-width, or 4-width character representing a character to seek to.

.TP
.B range
A range within the buffer representing the start and stop locations. The start location will be incremented by seek.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_none_eol\fP on success, but stopped at EOL.
.br
\fBF_none_eos\fP on success, but stopped at end of buffer.
.br
\fBF_none_stop\fP on success, but stopped at end of range.
.br
\fBF_data_not\fP on success, but there was no string data to seek.
.br
\fBF_data_not_eos\fP on success, but the range.start >= buffer.used.
.br
\fBF_data_not_stop\fP on success, but the range.start > range.stop.
.br
\fBF_complete_not_utf\fP (with error bit) if character is an incomplete UTF-8 fragment.
.br
\fBF_complete_not_utf_stop\fP (with error bit) if the stop location is reached before the complete UTF-8 character can be processed.
.br
\fBF_complete_not_utf_eos\fP (with error bit) if the end of buffer is reached before the complete UTF-8 character can be processed.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_not\fP (with error bit) if character is an invalid UTF-8 character.
.br
Errors (with error bit) from: f_utf_char_to_character().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
