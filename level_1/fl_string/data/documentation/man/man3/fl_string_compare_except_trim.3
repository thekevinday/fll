.TH fl_string_compare_except_trim "3" "July 2023" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fl_string_compare_except_trim
.SH SYNOPSIS
.nf
.B #include <fll/level_1/string.h>
.sp
\fBf_status_t fl_string_compare_except_trim\fP(
    \fBconst f_string_t        \fP\fIstring1\fP,
    \fBconst f_string_t        \fP\fIstring2\fP,
    \fBconst f_array_length_t  \fP\fIlength1\fP,
    \fBconst f_array_length_t  \fP\fIlength2\fP,
    \fBconst f_array_lengths_t \fP\fIexcept1\fP,
    \fBconst f_array_lengths_t \fP\fIexcept2\fP
);
.fi
.SH DESCRIPTION
.PP
Compare two strings, similar to strncmp().
.PP
This does not stop on NULL. NULL characters are ignored. Ignores leading and trailing whitespace. All 1-byte characters in except1 and except2 are ignored.
.SH PARAMETERS
.TP
.B string1
String to compare.

.TP
.B string2
String to compare.

.TP
.B length1
Length of string1.

.TP
.B length2
Length of string2.

.TP
.B except1
A set of locations within string1 to ignore. This assumes/requires that the locations be in linear order.

.TP
.B except2
A set of locations within string2 to ignore. This assumes/requires that the locations be in linear order.

.SH RETURN VALUE
.PP
\fBF_equal_to\fP when both strings equal.
.br
\fBF_equal_to_not\fP when both strings do not equal.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_parameter\fP (with error bit) from: f_utf_is_combining().
.br
\fBF_parameter\fP (with error bit) from: f_utf_is_whitespace().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
