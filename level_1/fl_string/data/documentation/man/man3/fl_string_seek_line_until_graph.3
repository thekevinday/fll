.TH fl_string_seek_line_until_graph "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fl_string_seek_line_until_graph
.SH SYNOPSIS
.nf
.B #include <fll/level_1/string.h>
.sp
\fBf_status_t fl_string_seek_line_until_graph\fP(
    \fBconst f_string_t        \fP\fIstring\fP,
    \fBconst uint8_t           \fP\fIplaceholder\fP,
    \fBf_string_range_t *const \fP\fIrange\fP
);
.fi
.SH DESCRIPTION
.PP
Increment string location until a graph character (including UTF-8) or an EOL is matched.
.SH PARAMETERS
.TP
.B string
The string to traverse.

.TP
.B placeholder
A single-width character representing a placeholder to ignore (may be NULL).

.TP
.B range
A range within the buffer representing the start and stop locations. The start location will be incremented by seek.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_none_eol\fP on success, but stopped at EOL.
.br
\fBF_data_not_stop\fP if range.start > range.stop.
.br
\fBF_complete_not_utf\fP (with error bit) if character is an incomplete UTF-8 fragment.
.br
\fBF_complete_not_utf_stop\fP (with error bit) if the stop location is reached before the complete UTF-8 character can be processed.
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_utf_is_graph().
.SH SEE ALSO
.PP
.nh
.ad l
\fIfl_string_compare\fP(3), \fIfl_string_compare_except\fP(3), \fIfl_string_compare_except_trim\fP(3), \fIfl_string_compare_trim\fP(3), \fIfl_string_dynamic_compare\fP(3), \fIfl_string_dynamic_compare_except\fP(3), \fIfl_string_dynamic_compare_except_string\fP(3), \fIfl_string_dynamic_compare_except_trim\fP(3), \fIfl_string_dynamic_compare_except_trim_string\fP(3), \fIfl_string_dynamic_compare_string\fP(3), \fIfl_string_dynamic_compare_trim\fP(3), \fIfl_string_dynamic_compare_trim_string\fP(3), \fIfl_string_dynamic_partial_compare\fP(3), \fIfl_string_dynamic_partial_compare_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except\fP(3), \fIfl_string_dynamic_partial_compare_except_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except_string\fP(3), \fIfl_string_dynamic_partial_compare_except_trim\fP(3), \fIfl_string_dynamic_partial_compare_except_trim_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except_trim_string\fP(3), \fIfl_string_dynamic_partial_compare_string\fP(3), \fIfl_string_dynamic_partial_compare_trim\fP(3), \fIfl_string_dynamic_partial_compare_trim_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_trim_string\fP(3), \fIfl_string_dynamic_partial_fll_identify\fP(3), \fIfl_string_dynamic_partial_rip\fP(3), \fIfl_string_dynamic_partial_rip_nulless\fP(3), \fIfl_string_dynamic_rip\fP(3), \fIfl_string_dynamic_rip_nulless\fP(3), \fIfl_string_dynamic_seek_line_to_utf_character\fP(3), \fIfl_string_dynamic_seek_line_until_graph\fP(3), \fIfl_string_dynamic_seek_line_until_graph_non\fP(3), \fIfl_string_dynamic_seek_to_utf_character\fP(3), \fIfl_string_rip\fP(3), \fIfl_string_rip_nulless\fP(3), \fIfl_string_seek_line_to_utf_character\fP(3), \fIfl_string_seek_line_until_graph\fP(3), \fIfl_string_seek_line_until_graph_non\fP(3), \fIfl_string_seek_to_utf_character\fP(3), \fIf_utf_is_graph()\fP, \fIf_utf_is_graph()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
