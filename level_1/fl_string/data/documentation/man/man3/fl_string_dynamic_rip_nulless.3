.TH fl_string_dynamic_rip_nulless "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
fl_string_dynamic_rip_nulless
.SH SYNOPSIS
.nf
.B #include <fll/level_1/string.h>
.sp
\fBf_status_t fl_string_dynamic_rip_nulless\fP(
    \fBconst f_string_static_t   \fP\fIsource\fP,
    \fBf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Allocate a new string from the provided range in the buffer.
.PP
Ignores leading and trailing whitespace. Ignores leading and trailing NULL characters. As a result, resulting size may be smaller than requested range.
.PP
Skips over NULL characters from source when appending.
.SH PARAMETERS
.TP
.B source
The string to rip from.

.TP
.B destination
The new string, which will be allocated or reallocated as necessary.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not_eos\fP if source length is 0.
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH SEE ALSO
.PP
.nh
.ad l
\fIfl_string_compare\fP(3), \fIfl_string_compare_except\fP(3), \fIfl_string_compare_except_trim\fP(3), \fIfl_string_compare_trim\fP(3), \fIfl_string_dynamic_compare\fP(3), \fIfl_string_dynamic_compare_except\fP(3), \fIfl_string_dynamic_compare_except_string\fP(3), \fIfl_string_dynamic_compare_except_trim\fP(3), \fIfl_string_dynamic_compare_except_trim_string\fP(3), \fIfl_string_dynamic_compare_string\fP(3), \fIfl_string_dynamic_compare_trim\fP(3), \fIfl_string_dynamic_compare_trim_string\fP(3), \fIfl_string_dynamic_partial_compare\fP(3), \fIfl_string_dynamic_partial_compare_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except\fP(3), \fIfl_string_dynamic_partial_compare_except_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except_string\fP(3), \fIfl_string_dynamic_partial_compare_except_trim\fP(3), \fIfl_string_dynamic_partial_compare_except_trim_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_except_trim_string\fP(3), \fIfl_string_dynamic_partial_compare_string\fP(3), \fIfl_string_dynamic_partial_compare_trim\fP(3), \fIfl_string_dynamic_partial_compare_trim_dynamic\fP(3), \fIfl_string_dynamic_partial_compare_trim_string\fP(3), \fIfl_string_dynamic_partial_fll_identify\fP(3), \fIfl_string_dynamic_partial_rip\fP(3), \fIfl_string_dynamic_partial_rip_nulless\fP(3), \fIfl_string_dynamic_rip\fP(3), \fIfl_string_dynamic_rip_nulless\fP(3), \fIfl_string_dynamic_seek_line_to_utf_character\fP(3), \fIfl_string_dynamic_seek_line_until_graph\fP(3), \fIfl_string_dynamic_seek_line_until_graph_non\fP(3), \fIfl_string_dynamic_seek_to_utf_character\fP(3), \fIfl_string_rip\fP(3), \fIfl_string_rip_nulless\fP(3), \fIfl_string_seek_line_to_utf_character\fP(3), \fIfl_string_seek_line_until_graph\fP(3), \fIfl_string_seek_line_until_graph_non\fP(3), \fIfl_string_seek_to_utf_character\fP(3)
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
