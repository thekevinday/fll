.TH fll_fss_extended_list_write "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
fll_fss_extended_list_write
.SH SYNOPSIS
.nf
.B #include <fll/level_2/fss/extended_list.h>
.sp
\fBf_status_t fll_fss_extended_list_write\fP(
    \fBconst f_string_static_t   \fP\fIobject\fP,
    \fBconst f_string_static_t   \fP\fIcontent\fP,
    \fBconst f_string_static_t  *\fP\fIcontent_prepend\fP,
    \fBconst f_string_ranges_t  *\fP\fIignore\fP,
    \fBf_state_t                 \fP\fIstate\fP,
    \fBf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Write a single object string and content string to a buffer, using fss-0003 format.
.SH PARAMETERS
.TP
.B object
A string representing the object.

.TP
.B content
A string representing the content.

.TP
.B content_prepend
A string to prepend at the start of each line in content, such as spaces. Set the pointer address to 0 to disable.

.TP
.B ignore
An optional list of ranges within the string to ignore. These ranges are only checked/ignored if there is a valid nested object open or a valid nested object close. Any valid nested object open or valid nested object close inside an ingore range will not be escaped. Set the pointer address to 0 to disable.

.TP
.B state
A state for providing flags and handling interrupts during long running operations. There is no state.handle(). There is no "callbacks" structure. There is no data structure passed to these functions.

.TP
.B destination
The buffer where the content is written to.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_none_eos\fP on success after reaching the end of the buffer.
.br
\fBF_none_stop\fP on success after reaching stopping point.
.br
\fBF_data_not_eos\fP no data to write due start location being greater than or equal to buffer size.
.br
\fBF_data_not_stop\fP no data to write due start location being greater than stop location.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_string_dynamic_increase().
.br
Errors (with error bit) from: fl_fss_extended_list_content_write().
.br
Errors (with error bit) from: fl_fss_extended_list_object_write().
.SH SEE ALSO
.PP
.nh
.ad l
\fIfll_fss_extended_list_read\fP(3), \fIfll_fss_extended_list_write\fP(3), \fIf_string_dynamic_increase()\fP, \fIfl_fss_extended_list_content_write()\fP, \fIfl_fss_extended_list_object_write()\fP, \fIf_string_dynamic_increase()\fP, \fIfl_fss_extended_list_content_write()\fP, \fIfl_fss_extended_list_object_write()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
