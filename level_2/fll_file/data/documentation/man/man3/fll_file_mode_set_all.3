.TH fll_file_mode_set_all "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
fll_file_mode_set_all
.SH SYNOPSIS
.nf
.B #include <fll/level_2/file.h>
.sp
\fBf_status_t fll_file_mode_set_all\fP(
    \fBconst f_string_static_t   \fP\fIpath\fP,
    \fBconst bool                \fP\fIdereference\fP,
    \fBconst mode_t              \fP\fImode\fP,
    \fBconst f_number_unsigned_t \fP\fIdepth_max\fP
);
.fi
.SH DESCRIPTION
.PP
Provides file-related functionality. Change mode of a given file or directory at the specified path.
.PP
This does not set mode based on umask(), be sure to apply umask if so desired. (such as: mode & ~mask).
.PP
If the file is a directory then recurse into that directory and apply mode to all files within.
.SH PARAMETERS
.TP
.B path
The path file name.

.TP
.B dereference
Set to TRUE to dereference symlinks (often is what is desired). Set to FALSE to operate on the symlink itself.

.TP
.B mode
The new mode to use.

.TP
.B depth_max
The max recursion depth.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if path.used is 0.
.br
\fBF_access_denied\fP (with error bit) on access denied.
.br
\fBF_access_mode\fP (with error bit) if the current user does not have access to assign the file mode.
.br
\fBF_directory\fP (with error bit) on invalid directory.
.br
\fBF_file_found_not\fP (with error bit) if file at path was not found.
.br
\fBF_input_output\fP (with error bit) on I/O error.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_read_only\fP (with error bit) if file is read-only.
.br
\fBF_failure\fP (with error bit) for any other error.
.br
Errors (with error bit) from: f_file_mode_set().
.br
Errors (with error bit) from: f_directory_exists().
.br
Errors (with error bit) from: fl_directory_list().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
