.TH fll_program_parameter_process_empty "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
fll_program_parameter_process_empty
.SH SYNOPSIS
.nf
.B #include <fll/level_2/program.h>
.sp
\fBvoid fll_program_parameter_process_empty\fP(
    \fBf_color_context_t *const \fP\fIcontext\fP,
    \fBf_color_set_t *const     \fP\fIsets\fP
);
.fi
.SH DESCRIPTION
.PP
Set the provided context to empty along with all additional color sets.
.PP
This will allow for safe usage of the color context and color sets to be safely processed when colors are disabled.
.SH PARAMETERS
.TP
.B context
The primary color context to assign.

.TP
.B sets
(optional) A NULL terminated array representing additional sets to assign as empty. Set to NULL to not use.

.SH STRUCTURES
.SS ""
.PP
.sp
.PP
Provide a color context structure.
.PP
This is intended to be used for printing, and this provides a management structure for all color context related data.
.PP
list: A list of colors, each with their specific color code string. format: The color code formatting strings. mode: A code representing the color mode. set: A collection of color context sets for direct use in color printing.
.PP
error: Color context associated with "error". important: Color context associated with "important". normal: Color context associated with "normal". normal_reset: Color context associated with "normal_reset". notable: Color context associated with "notable". reset: Reset the color context. standout: Color context associated with "standout". success: Color context associated with "success". title: Color context associated with "title". warning: Color context associated with "warning".
.sp
.RS
.nf
\fB
struct f_color_context_t {
  f_color_t             \fIlist\fP;
  f_color_format_t      \fIformat\fP;
  f_color_mode_t        \fImode\fP;
  f_color_set_context_t \fIset\fP;
  f_string_dynamic_t    \fIerror\fP;
  f_string_dynamic_t    \fIimportant\fP;
  f_string_dynamic_t    \fInormal\fP;
  f_string_dynamic_t    \fInormal_reset\fP;
  f_string_dynamic_t    \fInotable\fP;
  f_string_dynamic_t    \fIreset\fP;
  f_string_dynamic_t    \fIstandout\fP;
  f_string_dynamic_t    \fIsuccess\fP;
  f_string_dynamic_t    \fItitle\fP;
  f_string_dynamic_t    \fIwarning\fP;
};
\fP
.fi
.RE
.SS ""
.PP
.sp
.PP
Provide a set of two colors, a before and an after.
.PP
This is intended to be used for printing, such that the printed code is prefixed with the "before" and postfixed with the "after". These color strings should be NULL terminated.
.PP
before: A pointer to the dynamic string representing the before color to assign, set to NULL to disable. after: A pointer to the dynamic string representing the after color to assign, set to NULL to disable.
.sp
.RS
.nf
\fB
struct f_color_set_t {
  const f_string_static_t  *\fIbefore\fP;
  const f_string_static_t  *\fIafter\fP;
};
\fP
.fi
.RE
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
