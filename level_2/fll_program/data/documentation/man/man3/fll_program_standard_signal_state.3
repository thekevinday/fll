.TH fll_program_standard_signal_state "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
fll_program_standard_signal_state
.SH SYNOPSIS
.nf
.B #include <fll/level_2/program.h>
.sp
\fBf_status_t fll_program_standard_signal_state\fP(
    \fBvoid *const \fP\fIstate\fP,
    \fBvoid *const \fP\fIinternal\fP
);
.fi
.SH DESCRIPTION
.PP
Standardized callback for checking for interrupts via the f_state_t interrupt callback.
.PP
F_signal_termination
.PP
These signals may not be checked if they are not also blocked via the fll_program_data_t.signals variable.
.PP
When one of the above signals is both blocked and received, then this calls fll_program_standard_signal_received().
.SH PARAMETERS
.TP
.B state
The state data. This must be of type (f_state_t *).

.TP
.B internal
Not used.

.SH RETURN VALUE
.PP
\fBF_interrupt_not\fP if not interrupted.
.br
\fBF_interrupt\fP (with error bit) if interrupted.
.SH SEE ALSO
.PP
.nh
.ad l
\fIfll_program_parameter_additional_append\fP(3), \fIfll_program_parameter_additional_mash\fP(3), \fIfll_program_parameter_additional_rip\fP(3), \fIfll_program_parameter_additional_rip_mash\fP(3), \fIfll_program_parameter_long_print_cannot_use_with\fP(3), \fIfll_program_parameter_process\fP(3), \fIfll_program_parameter_process_empty\fP(3), \fIfll_program_print_help_header\fP(3), \fIfll_program_print_help_option\fP(3), \fIfll_program_print_help_option_long\fP(3), \fIfll_program_print_help_option_other\fP(3), \fIfll_program_print_help_usage\fP(3), \fIfll_program_print_version\fP(3), \fIfll_program_standard_setdown\fP(3), \fIfll_program_standard_setup\fP(3), \fIfll_program_standard_signal_received\fP(3), \fIfll_program_standard_signal_state\fP(3), \fIfll_program_standard_signal_received()\fP, \fIf_state_t.custom\fP, \fIfll_program_standard_signal_received()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
