.TH f_fss_count_lines "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_fss_count_lines
.SH SYNOPSIS
.nf
.B #include <fll/level_0/fss.h>
.sp
\fBf_status_t f_fss_count_lines\fP(
    \fBf_state_t               \fP\fIstate\fP,
    \fBconst f_string_static_t \fP\fIbuffer\fP,
    \fBconst f_array_length_t  \fP\fIbefore\fP,
    \fBf_array_length_t *const \fP\fIline\fP
);
.fi
.SH DESCRIPTION
.PP
Count the number of new lines from the buffer before the given location.
.PP
Use this to calculate where a given range exists in relation to a line.
.PP
This does not initialize line, instead it only performs addition to line.
.SH PARAMETERS
.TP
.B state
A state for providing flags and handling interrupts during long running operations.

.TP
.B buffer
The string to process.

.TP
.B before
The position in the buffer where to start counting before.

.TP
.B line
The total lines found leading up to but not including before. This value is not reset and only additions are performed. When F_data_not is returned, this value is not altered.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP on success but buffer.used is 0 (line is set to 0).
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_fss_apply_delimit\fP(3), \fIf_fss_apply_delimit_range\fP(3), \fIf_fss_count_lines\fP(3), \fIf_fss_count_lines_range\fP(3), \fIf_fss_fail_utf\fP(3), \fIf_fss_fail_utf_to_false\fP(3), \fIf_fss_is_combining\fP(3), \fIf_fss_is_graph\fP(3), \fIf_fss_is_space\fP(3), \fIf_fss_is_zero_width\fP(3), \fIf_fss_seek_to_eol\fP(3), \fIf_fss_skip_past_delimit\fP(3), \fIf_fss_skip_past_space\fP(3)
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
