.TH f_file_size "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_file_size
.SH SYNOPSIS
.nf
.B #include <file.h>
.sp
\fBf_status_t f_file_size\fP(
    \fBconst f_string_static_t \fP\fIpath\fP,
    \fBconst bool              \fP\fIdereference\fP,
    \fBoff_t *const            \fP\fIsize\fP
);
.fi
.SH DESCRIPTION
.PP
Read the size of file.
.SH PARAMETERS
.TP
.B path
The path to the file.

.TP
.B dereference
Set to TRUE to dereference symlinks (often is what is desired). Set to FALSE to operate on the symlink itself.

.TP
.B size
This gets set to the size of the file.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_access_denied\fP (with error bit) if access to the file was denied.
.br
\fBF_directory_not\fP (with error bit) on invalid directory.
.br
\fBF_file_found_not\fP (with error bit) if the file was not found.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_number_overflow\fP (with error bit) on overflow error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
