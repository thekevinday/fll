.TH f_file_stream_write_range "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
f_file_stream_write_range
.SH SYNOPSIS
.nf
.B #include <fll/level_0/file.h>
.sp
\fBf_status_t f_file_stream_write_range\fP(
    \fBconst f_file_t          \fP\fIfile\fP,
    \fBconst f_string_static_t \fP\fIbuffer\fP,
    \fBconst f_string_range_t  \fP\fIrange\fP,
    \fBf_array_length_t *const \fP\fIwritten\fP
);
.fi
.SH DESCRIPTION
.PP
Write a given range within the buffer.
.SH PARAMETERS
.TP
.B file
The file to write to. The file must already be open. The file.size_write represents the amount to process at a given time.

.TP
.B buffer
The buffer to write to the file.

.TP
.B range
An inclusive start an stop range within the buffer to read.

.TP
.B written
The total bytes written. Set pointer to 0 to not use.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_none_stop\fP on success but no data was written (written == 0) (not an error and often happens if file type is not a regular file).
.br
\fBF_none_eos\fP on success but range.stop exceeded buffer.used (only wrote up to buffer.used).
.br
\fBF_file_write\fP (with error bit) on error during file write.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
