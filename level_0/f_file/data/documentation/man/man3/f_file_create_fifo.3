.TH f_file_create_fifo "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
f_file_create_fifo
.SH SYNOPSIS
.nf
.B #include <fll/level_0/file.h>
.sp
\fBf_status_t f_file_create_fifo\fP(
    \fBconst f_string_static_t \fP\fIpath\fP,
    \fBconst mode_t            \fP\fImode\fP
);
.fi
.SH DESCRIPTION
.PP
Create a fifo based on the given path and file mode.
.SH PARAMETERS
.TP
.B path
The path file name.

.TP
.B mode
The file mode to assign.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if path.used is 0.
.br
\fBF_access_denied\fP (with error bit) on access denied.
.br
\fBF_directory_not\fP (with error bit) if a supposed directory in path is not actually a directory.
.br
\fBF_file_found\fP (with error bit) if a file was found while exclusive is TRUE.
.br
\fBF_filesystem_quota_block\fP (with error bit) if file system's disk blocks or ififos are exhausted.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_prohibited\fP (with error bit) if file system does not allow for making changes.
.br
\fBF_space_not\fP (with error bit) if file system is out of space (or file system quota is reached).
.br
\fBF_supported_not\fP (with error bit) for unsupported file types.
.br
\fBF_failure\fP (with error bit) for any other error.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
