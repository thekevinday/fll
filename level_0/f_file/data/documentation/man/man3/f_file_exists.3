.TH f_file_exists "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_file_exists
.SH SYNOPSIS
.nf
.B #include <fll/level_0/file.h>
.sp
\fBf_status_t f_file_exists\fP(
    \fBconst f_string_static_t \fP\fIpath\fP,
    \fBconst bool              \fP\fIdereference\fP
);
.fi
.SH DESCRIPTION
.PP
Identify whether or not a file exists at the given path.
.PP
This does not require access on the file itself. This only requires access via the parent directories in the path.
.SH PARAMETERS
.TP
.B path
The path file name.

.TP
.B dereference
Set to TRUE to dereference symlinks. Set to FALSE to operate on the symlink itself.

.SH RETURN VALUE
.PP
\fBF_true\fP if path was found.
.br
\fBF_false\fP if path was not found.
.br
\fBF_data_not\fP if path.used is 0.
.br
\fBF_access_denied\fP (with error bit) if access to the file was denied.
.br
\fBF_directory_not\fP (with error bit) on invalid directory.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_number_overflow\fP (with error bit) on overflow error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
