.TH f_file_stream_read_block "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
f_file_stream_read_block
.SH SYNOPSIS
.nf
.B #include <fll/level_0/file.h>
.sp
\fBf_status_t f_file_stream_read_block\fP(
    \fBconst f_file_t            \fP\fIfile\fP,
    \fBf_string_dynamic_t *const \fP\fIbuffer\fP
);
.fi
.SH DESCRIPTION
.PP
Read until a single block is filled or EOF is reached.
.PP
To determine how much was read into the buffer, record buffer->used before execution and compare to buffer->used after execution.
.SH PARAMETERS
.TP
.B file
The file to read. The file must already be open. The file.size_read represents the amount to process at a given time.

.TP
.B buffer
The buffer the file is being read into. The contents of the file is appended into this buffer.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_none_eof\fP on success and EOF was reached.
.br
\fBF_error\fP (with error bit) if the file is already in the error state at the start of this function.
.br
\fBF_file_closed\fP (with error bit) if the file is closed.
.br
\fBF_file_read\fP (with error bit) on file read error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
