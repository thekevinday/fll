.TH f_serialize_from_simple_range "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_serialize_from_simple_range
.SH SYNOPSIS
.nf
.B #include <fll/level_0/serialize.h>
.sp
\fBf_status_t f_serialize_from_simple_range\fP(
    \fBconst f_string_static_t  \fP\fIsource\fP,
    \fBf_string_ranges_t *const \fP\fIranges\fP
);
.fi
.SH DESCRIPTION
.PP
Identify string positions within a serialize string using the Simple serialize algorithm.
.PP
The simple Serialize algorithm is akin to the PATH environment variable, example: PATH="/bin:/sbin:/usr/bin".
.PP
After processing the above example, there would be the following positions: 1) start = 0, stop = 3. 2) start = 5, stop = 9. 3) start = 11, stop = 18.
.SH PARAMETERS
.TP
.B source
A serialized string to deserialize.

.TP
.B ranges
The ranges within the serialize string representing distinct separate strings. All deserialized ranges are appended to the destination.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_complete_not_utf_eos\fP if an incomplete UTF-8 character is found at the end of the source.
.br
\fBF_data_not\fP on success and source.used is 0.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_string_ranges_increase()
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_serialize_from_simple\fP(3), \fIf_serialize_from_simple_get\fP(3), \fIf_serialize_from_simple_range\fP(3), \fIf_serialize_from_simple_select\fP(3), \fIf_serialize_to_simple\fP(3), \fIf_string_ranges_increase()\fP, \fIf_string_ranges_increase()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
