.TH f_directory_exists "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_directory_exists
.SH SYNOPSIS
.nf
.B #include <fll/level_0/directory.h>
.sp
\fBf_status_t f_directory_exists\fP(
    \fBconst f_string_static_t \fP\fIpath\fP
);
.fi
.SH DESCRIPTION
.PP
Identify whether or not a file exists at the given path and if that file is a directory or a symlink to a directory.
.SH PARAMETERS
.TP
.B path
The file path to the directory.

.SH RETURN VALUE
.PP
\fBF_true\fP if path was found and path is a directory (or a symlink to a directory).
.br
\fBF_false\fP if path was found and path is not a directory.
.br
\fBF_file_found_not\fP if the path was not found.
.br
\fBF_data_not\fP if path.used is 0.
.br
\fBF_access_denied\fP (with error bit) if access to the file was denied.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_number_overflow\fP (with error bit) on overflow error.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_directory_create\fP(3), \fIf_directory_create_at\fP(3), \fIf_directory_exists\fP(3), \fIf_directory_exists_at\fP(3), \fIf_directory_is\fP(3), \fIf_directory_is_at\fP(3), \fIf_directory_list\fP(3), \fIf_directory_open\fP(3), \fIf_directory_open_at\fP(3), \fIf_directory_remove\fP(3), \fIf_directory_remove_custom\fP(3), \fIf_directory_touch\fP(3), \fIf_directory_touch_at\fP(3), \fIstat()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
