.TH f_directory_open "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_directory_open
.SH SYNOPSIS
.nf
.B #include <fll/level_0/directory.h>
.sp
\fBf_status_t f_directory_open\fP(
    \fBconst f_string_static_t \fP\fIpath\fP,
    \fBconst bool              \fP\fIdereference\fP,
    \fBint                    *\fP\fIid\fP
);
.fi
.SH DESCRIPTION
.PP
Open the directory specified by path.
.PP
This opens with O_PATH and O_CLOEXEC.
.SH PARAMETERS
.TP
.B path
The file path to the directory.

.TP
.B dereference
Set to TRUE to dereferenc symlinks (often is what is desired). Set to FALSE to operate on the symlink itself.

.TP
.B id
The file descriptor. This is updated with the result of open() or openat().

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if path.used is 0.
.br
\fBF_access_denied\fP (with error bit) on access denied.
.br
\fBF_buffer\fP (with error bit) if the buffer is invalid.
.br
\fBF_directory_found_not\fP (with error bit) if directory was not found.
.br
\fBF_failure\fP (with error bit) if failed to read directory information.
.br
\fBF_file_open_max\fP (with error bit) too many open files.
.br
\fBF_file_type_directory_not\fP (with error bit) file is not a directory.
.br
\fBF_interrupt\fP (with error bit) when program received an interrupt signal, halting operation.
.br
\fBF_loop\fP (with error bit) on loop error.
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_name\fP (with error bit) on path name error.
.br
\fBF_number_overflow\fP (with error bit) on integer overflow.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_prohibited\fP (with error bit) if file system does not allow for removing.
.br
\fBF_read_only\fP (with error bit) if file is read-only.
.br
\fBF_space_not\fP (with error bit) if file system is out of space (or file system quota is reached).
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
