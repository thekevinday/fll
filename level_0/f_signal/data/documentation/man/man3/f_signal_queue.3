.TH f_signal_queue "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_signal_queue
.SH SYNOPSIS
.nf
.B #include <fll/level_0/signal.h>
.sp
\fBf_status_t f_signal_queue\fP(
    \fBconst pid_t        \fP\fIid\fP,
    \fBconst int          \fP\fIsignal\fP,
    \fBconst union sigval \fP\fIvalue\fP
);
.fi
.SH DESCRIPTION
.PP
Send the signal and value to the given process.
.SH PARAMETERS
.TP
.B id
The PID to signal.

.TP
.B signal
The signal to send to the thread.

.TP
.B value
The signal value to send.

.SH RETURN VALUE
.PP
\fBF_none\fP on success but no signal found.
.br
\fBF_found_not\fP (with error bit) if the given PID was found.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_resource_not\fP (with error bit) if the max signals is reached.
.br
\fBF_supported_not\fP (with error bit) if this action is not supported by the current OS.
.br
\fBF_failure\fP (with error bit) for any other error.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_signal_action\fP(3), \fIf_signal_close\fP(3), \fIf_signal_mask\fP(3), \fIf_signal_open\fP(3), \fIf_signal_pause\fP(3), \fIf_signal_queue\fP(3), \fIf_signal_read\fP(3), \fIf_signal_send\fP(3), \fIf_signal_set_add\fP(3), \fIf_signal_set_delete\fP(3), \fIf_signal_set_empty\fP(3), \fIf_signal_set_fill\fP(3), \fIf_signal_set_has\fP(3), \fIf_signal_suspend\fP(3), \fIf_signal_wait\fP(3), \fIf_signal_wait_until\fP(3), \fIsigqueue()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
