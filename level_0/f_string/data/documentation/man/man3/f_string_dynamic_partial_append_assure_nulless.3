.TH f_string_dynamic_partial_append_assure_nulless "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_string_dynamic_partial_append_assure_nulless
.SH SYNOPSIS
.nf
.B #include <fll/level_0/string.h>
.sp
\fBf_status_t f_string_dynamic_partial_append_assure_nulless\fP(
    \fBconst f_string_static_t   \fP\fIsource\fP,
    \fBconst f_string_range_t    \fP\fIrange\fP,
    \fBf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Append the source string onto the destination only if the string is not already at the end and restricted to the given range.
.PP
This ignores NULL characters when comparing both the source and the destination.
.PP
Skips over NULL characters from source when appending.
.SH PARAMETERS
.TP
.B source
The source string to append.

.TP
.B range
A range within the source to restrict the copy from.

.TP
.B destination
The destination string the source is appended onto.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if source length is 0.
.br
\fBF_data_not_eos\fP if range.start >= source.used.
.br
\fBF_data_not_stop\fP if range.start > range.stop.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_string_too_large\fP (with error bit) if the combined string is too large.
.br
Errors (with error bit) from: f_memory_resize().
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_string_dynamic_adjust\fP(3), \fIf_string_dynamic_append\fP(3), \fIf_string_dynamic_append_assure\fP(3), \fIf_string_dynamic_append_assure_nulless\fP(3), \fIf_string_dynamic_append_nulless\fP(3), \fIf_string_dynamic_decimate_by\fP(3), \fIf_string_dynamic_decrease_by\fP(3), \fIf_string_dynamic_increase\fP(3), \fIf_string_dynamic_increase_by\fP(3), \fIf_string_dynamic_mash\fP(3), \fIf_string_dynamic_mash_nulless\fP(3), \fIf_string_dynamic_mish\fP(3), \fIf_string_dynamic_mish_nulless\fP(3), \fIf_string_dynamic_partial_append\fP(3), \fIf_string_dynamic_partial_append_assure\fP(3), \fIf_string_dynamic_partial_append_assure_nulless\fP(3), \fIf_string_dynamic_partial_append_nulless\fP(3), \fIf_string_dynamic_partial_mash\fP(3), \fIf_string_dynamic_partial_mash_nulless\fP(3), \fIf_string_dynamic_partial_mish\fP(3), \fIf_string_dynamic_partial_mish_nulless\fP(3), \fIf_string_dynamic_partial_prepend\fP(3), \fIf_string_dynamic_partial_prepend_assure\fP(3), \fIf_string_dynamic_partial_prepend_assure_nulless\fP(3), \fIf_string_dynamic_partial_prepend_nulless\fP(3), \fIf_string_dynamic_prepend\fP(3), \fIf_string_dynamic_prepend_assure\fP(3), \fIf_string_dynamic_prepend_assure_nulless\fP(3), \fIf_string_dynamic_prepend_nulless\fP(3), \fIf_string_dynamic_resize\fP(3), \fIf_string_dynamic_seek_line\fP(3), \fIf_string_dynamic_seek_line_to\fP(3), \fIf_string_dynamic_seek_to\fP(3), \fIf_string_dynamic_terminate\fP(3), \fIf_string_dynamic_terminate_after\fP(3), \fIf_string_dynamics_adjust\fP(3), \fIf_string_dynamics_append\fP(3), \fIf_string_dynamics_append_all\fP(3), \fIf_string_dynamics_decimate_by\fP(3), \fIf_string_dynamics_decrease_by\fP(3), \fIf_string_dynamics_increase\fP(3), \fIf_string_dynamics_increase_by\fP(3), \fIf_string_dynamics_resize\fP(3), \fIf_string_dynamicss_adjust\fP(3), \fIf_string_dynamicss_append\fP(3), \fIf_string_dynamicss_append_all\fP(3), \fIf_string_dynamicss_decimate_by\fP(3), \fIf_string_dynamicss_decrease_by\fP(3), \fIf_string_dynamicss_increase\fP(3), \fIf_string_dynamicss_increase_by\fP(3), \fIf_string_dynamicss_resize\fP(3), \fIf_memory_resize()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
