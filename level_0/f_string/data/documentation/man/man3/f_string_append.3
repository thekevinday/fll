.TH f_string_append "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_string_append
.SH SYNOPSIS
.nf
.B #include <fll/level_0/string.h>
.sp
\fBf_status_t f_string_append\fP(
    \fBconst f_string_t          \fP\fIsource\fP,
    \fBconst f_array_length_t    \fP\fIlength\fP,
    \fBf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Provides string capabilities.
.PP
It is highly recommended that all string arrays are set to a max size of F_array_length_t_size_d. Any calculations against the length (aka: string.used) can always perform (A < B) operators such that the B is
.br
\fBF_array_length_t_size_d\fP + 1 without integer overflow. Append the source string onto the destination.
.SH PARAMETERS
.TP
.B source
The source string to append.

.TP
.B length
The length of source to append.

.TP
.B destination
The destination string the source is appended onto.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if source length is 0.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_string_too_large\fP (with error bit) if the combined string is too large.
.br
Errors (with error bit) from: f_memory_resize().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
