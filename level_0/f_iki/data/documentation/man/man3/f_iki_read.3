.TH f_iki_read "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_iki_read
.SH SYNOPSIS
.nf
.B #include <fll/level_0/iki.h>
.sp
\fBf_status_t f_iki_read\fP(
    \fBconst f_state_t          \fP\fIstate\fP,
    \fBf_string_static_t *const \fP\fIbuffer\fP,
    \fBf_string_range_t *const  \fP\fIrange\fP,
    \fBf_iki_data_t *const      \fP\fIdata\fP
);
.fi
.SH DESCRIPTION
.PP
Read a single iki Vocabulary and Content.
.PP
This does not verify if the vocabulary name is known. This only finds a complete vocabulary name and content.
.PP
This will increment the range after the end of any valud vocabulary and content set.
.PP
This will update the buffer at the given range with any placeholders to escaped data. Calling this more than once on the same buffer range could result in multiple escaping.
.SH PARAMETERS
.TP
.B state
A state for providing flags and handling interrupts during long running operations. There is no state.handle(). There is no "callbacks" structure. There is no data structure passed to these functions.

.TP
.B buffer
The string to process.

.TP
.B range
The start/stop location within the buffer to be processed. The start location will be updated as the buffer is being processed. The start location will represent where the read stopped on return. A start location past the stop location or buffer used means that the entire range was processed.

.TP
.B data
The IKI variable data.

.SH RETURN VALUE
.PP
\fBF_none\fP on success and an IKI vocabulary name was found.
.br
\fBF_none_eos\fP on success and an IKI vocabulary name was found and end of string was reached.
.br
\fBF_none_stop\fP on success and an IKI vocabulary name was found and stop point was reached.
.br
\fBF_complete_not_utf_eos\fP on success but string ended on incomplete UTF-8 and f_iki_state_flag_utf_fail_on_valid_not_e is not set.
.br
\fBF_complete_not_utf_stop\fP on success but stop point reached on incomplete UTF-8 and f_iki_state_flag_utf_fail_on_valid_not_e is not set.
.br
\fBF_data_not\fP on success, but there were no IKI vocabulary names found.
.br
\fBF_data_not_eos\fP on success and EOS was reached, but there were no IKI vocabulary names found.
.br
\fBF_data_not_stop\fP on success and stop point was reached, but there were no IKI vocabulary names found.
.br
\fBF_complete_not_utf_eos\fP (with error bit) on success but string ended on incomplete UTF-8 and f_iki_state_flag_utf_fail_on_valid_not_e is set.
.br
\fBF_complete_not_utf_stop\fP (with error bit) on success but stop point reached on incomplete UTF-8 and f_iki_state_flag_utf_fail_on_valid_not_e is set.
.br
\fBF_interrupt\fP (with error bit) if stopping due to an interrupt.
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_string_too_large\fP (with error bit) if a string length is too large to store in the buffer.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
