.TH f_iki_datass_decrease_by "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_iki_datass_decrease_by
.SH SYNOPSIS
.nf
.B #include <fll/level_0/iki.h>
.sp
\fBf_status_t f_iki_datass_decrease_by\fP(
    \fBconst f_array_length_t \fP\fIamount\fP,
    \fBf_iki_datass_t        *\fP\fIdatass\fP
);
.fi
.SH DESCRIPTION
.PP
Resize the iki_datass array to a smaller size.
.PP
This will resize making the array smaller based on (size - given length). If the given length is too small, then the resize will fail. This will not shrink the size to less than 0.
.SH PARAMETERS
.TP
.B amount
A positive number representing how much to decrease the size by.

.TP
.B datass
The array to resize.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP if amount is 0.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_memory_delete().
.br
Errors (with error bit) from: f_memory_resize().
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_iki_data_delete\fP(3), \fIf_iki_data_destroy\fP(3), \fIf_iki_datas_adjust\fP(3), \fIf_iki_datas_append\fP(3), \fIf_iki_datas_append_all\fP(3), \fIf_iki_datas_decimate_by\fP(3), \fIf_iki_datas_decrease_by\fP(3), \fIf_iki_datas_increase\fP(3), \fIf_iki_datas_increase_by\fP(3), \fIf_iki_datas_resize\fP(3), \fIf_iki_datass_adjust\fP(3), \fIf_iki_datass_append\fP(3), \fIf_iki_datass_append_all\fP(3), \fIf_iki_datass_decimate_by\fP(3), \fIf_iki_datass_decrease_by\fP(3), \fIf_iki_datass_increase\fP(3), \fIf_iki_datass_increase_by\fP(3), \fIf_iki_datass_resize\fP(3), \fIf_memory_delete()\fP, \fIf_memory_resize()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
