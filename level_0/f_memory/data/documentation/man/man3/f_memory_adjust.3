.TH f_memory_adjust "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_memory_adjust
.SH SYNOPSIS
.nf
.B #include <fll/level_0/memory.h>
.sp
\fBf_status_t f_memory_adjust\fP(
    \fBconst size_t \fP\fIold_length\fP,
    \fBconst size_t \fP\fInew_length\fP,
    \fBconst size_t \fP\fIsize\fP,
    \fBvoid **const \fP\fIpointer\fP
);
.fi
.SH DESCRIPTION
.PP
Provide means to use memory routines, with error checking. Securely resize dynamically allocated data.
.PP
Will change all data to 0 prior to deallocation.
.PP
The pointer address might be changed by realloc().
.SH PARAMETERS
.TP
.B old_length
The total number of blocks representing the length to be resized from.

.TP
.B new_length
The total number of blocks representing the length to be resized to.

.TP
.B size
The block size, in bytes (size * length = allocated size).

.TP
.B pointer
A pointer to the address that will be resized.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP on success, but there was nothing to do.
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
