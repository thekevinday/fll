.TH f_memory_structure_decimate_by "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_memory_structure_decimate_by
.SH SYNOPSIS
.nf
.B #include <fll/level_0/memory.h>
.sp
\fBf_status_t f_memory_structure_decimate_by\fP(
    \fBconst f_array_length_t  \fP\fIamount\fP,
    \fBconst size_t            \fP\fItype_size\fP,
    \fBvoid **const            \fP\fIstructure\fP,
    \fBf_array_length_t *const \fP\fIused\fP,
    \fBf_array_length_t *const \fP\fIsize\fP
);
.fi
.SH DESCRIPTION
.PP
Resize the structure to a smaller size, by the given amount.
.PP
This will not shrink the size to less than 0. Memory being deleted will be wiped.
.SH PARAMETERS
.TP
.B amount
A positive number representing how much to decimate the size by.

.TP
.B type_size
The size of the structure type (such as: sizeof(structure_size)). Must be greater than 0.

.TP
.B structure
The structure to delete.

.TP
.B used
The amount of data used by the structure.

.TP
.B size
The amount of data allocated to the structure.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_data_not\fP on success, but there is no reason to decimate size (amount = 0 or size = 0).
.br
\fBF_memory_not\fP (with error bit) on out of memory.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
