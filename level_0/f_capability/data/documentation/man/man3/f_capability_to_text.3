.TH f_capability_to_text "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_capability_to_text
.SH SYNOPSIS
.nf
.B #include <fll/level_0/capability.h>
.sp
\fBf_status_t f_capability_to_text\fP(
    \fBconst f_capability_t      \fP\fIcapability\fP,
    \fBf_string_dynamic_t *const \fP\fItext\fP
);
.fi
.SH DESCRIPTION
.PP
Convert the capability to a human-readable string.
.PP
This will append the string to text.
.SH PARAMETERS
.TP
.B capability
The capability code.

.TP
.B text
The determined human-readable string. This is NULL terminated after the text.used.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_implemented_not\fP (with error bit) if this function is not available (due to not having libcap support compiled in).
.br
\fBF_memory_not\fP (with error bit) if a out of memory.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_string_too_large\fP (with error bit) if appended string length is too large to store in the buffer.
.br
\fBF_failure\fP (with error bit) on any other failure.
.br
Errors (with error bit) from: f_string_dynamic_resize().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
