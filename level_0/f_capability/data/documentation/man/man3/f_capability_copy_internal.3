.TH f_capability_copy_internal "3" "July 2023" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_capability_copy_internal
.SH SYNOPSIS
.nf
.B #include <fll/level_0/capability.h>
.sp
\fBf_status_t f_capability_copy_internal\fP(
    \fBconst void *const     \fP\fIexternal\fP,
    \fBf_capability_t *const \fP\fIcapability\fP
);
.fi
.SH DESCRIPTION
.PP
Copy an externally represented capability into an internally represented capability.
.SH PARAMETERS
.TP
.B external
A pointer to user allocated memory representing the (external) capability. This must have been popilated by cap_copy_ext() or f_capability_copy_external().

.TP
.B capability
The (internal) capability the (external) capability is copied into. This must be freed via f_capability_delete() when finished with.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_implemented_not\fP (with error bit) if this function is not available (due to not having libcap support compiled in).
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_range_not\fP (with error bit) on out of range when processing (external) capability.
.br
\fBF_failure\fP (with error bit) on failure to get size.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
