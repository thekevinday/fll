.TH f_capability_supported_ambient "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_capability_supported_ambient
.SH SYNOPSIS
.nf
.B #include <fll/level_0/capability.h>
.sp
\fBbool f_capability_supported_ambient\fP(
    \fBvoid     \fP\fI\fP
);
.fi
.SH DESCRIPTION
.PP
Check if capabilities support ambient, using special libcap function/macro.
.SH RETURN VALUE
.PP
\fBF_true\fP if ambient is supported.
.br
\fBF_false\fP otherwise.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_capability_ambient_get\fP(3), \fIf_capability_ambient_reset\fP(3), \fIf_capability_ambient_set\fP(3), \fIf_capability_clear\fP(3), \fIf_capability_clear_flag\fP(3), \fIf_capability_compare\fP(3), \fIf_capability_copy\fP(3), \fIf_capability_copy_external\fP(3), \fIf_capability_copy_internal\fP(3), \fIf_capability_delete\fP(3), \fIf_capability_file_descriptor_get\fP(3), \fIf_capability_file_descriptor_set\fP(3), \fIf_capability_file_get\fP(3), \fIf_capability_file_set\fP(3), \fIf_capability_flag_get\fP(3), \fIf_capability_flag_set\fP(3), \fIf_capability_from_name\fP(3), \fIf_capability_from_text\fP(3), \fIf_capability_groups_set\fP(3), \fIf_capability_initialize\fP(3), \fIf_capability_mode_get\fP(3), \fIf_capability_mode_get_name\fP(3), \fIf_capability_mode_set\fP(3), \fIf_capability_owner_get\fP(3), \fIf_capability_owner_set\fP(3), \fIf_capability_process_bound_drop\fP(3), \fIf_capability_process_bound_get\fP(3), \fIf_capability_process_get\fP(3), \fIf_capability_process_get_by_id\fP(3), \fIf_capability_process_set\fP(3), \fIf_capability_security_bits_get\fP(3), \fIf_capability_security_bits_set\fP(3), \fIf_capability_size\fP(3), \fIf_capability_supported\fP(3), \fIf_capability_supported_ambient\fP(3), \fIf_capability_supported_code\fP(3), \fIf_capability_to_name\fP(3), \fIf_capability_to_text\fP(3), \fIf_capability_user_set\fP(3), \fICAP_AMBIENT_SUPPORTED()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
