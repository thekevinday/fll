.TH f_color_save_1 "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_color_save_1
.SH SYNOPSIS
.nf
.B #include <fll/level_0/color.h>
.sp
\fBf_status_t f_color_save_1\fP(
    \fBconst f_color_format_t    \fP\fIformat\fP,
    \fBconst f_string_static_t   \fP\fIcolor1\fP,
    \fBf_string_dynamic_t *const \fP\fIbuffer\fP
);
.fi
.SH DESCRIPTION
.PP
Save color information to some string using one color code.
.PP
This is environment sensitive. If TERM is not defined or set to "linux", then macro_f_color_t_set_linux() is used. Otherwise macro_f_color_t_set_xterminal() is used.
.SH PARAMETERS
.TP
.B format
The color format parts.

.TP
.B color1
A color to assign.

.TP
.B buffer
The string to save the colors to. The buffer will become NULL terminated after the appended string length.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
Errors (with error bit) from: f_string_dynamic_increase_by()
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_color_load_context\fP(3), \fIf_color_save_1\fP(3), \fIf_color_save_2\fP(3), \fIf_color_save_3\fP(3), \fIf_color_save_4\fP(3), \fIf_color_save_5\fP(3), \fImacro_f_color_t_set_linux()\fP, \fImacro_f_color_t_set_xterminal()\fP, \fIf_string_dynamic_increase_by()\fP, \fImemcpy()\fP, \fIf_string_dynamic_increase_by()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
