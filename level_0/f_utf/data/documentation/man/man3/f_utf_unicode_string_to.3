.TH f_utf_unicode_string_to "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_utf_unicode_string_to
.SH SYNOPSIS
.nf
.B #include <convert.h>
.sp
\fBf_status_t f_utf_unicode_string_to\fP(
    \fBconst f_string_t       \fP\fIstring\fP,
    \fBconst f_array_length_t \fP\fIlength\fP,
    \fBuint32_t              *\fP\fIunicode\fP
);
.fi
.SH DESCRIPTION
.PP
Convert a string of the format "U+FFFF" into the codepoint value.
.PP
This ignores NULL characters. The string may only contain "U+" followed by a hexidecimal digit, upper or lower case. The "U+" prefix is optional. Only ASCII characters are allowed to represent the Unicode sequence string.
.SH PARAMETERS
.TP
.B string
The string representing a Unicode sequence.

.TP
.B length
The maximum number of characters.

.TP
.B unicode
A 32-bit integer representing the Unicode (such as U+0001). Does not need to be interpretted like UTF-8, this is a number from 0 onto max supported Unicode integer value (U+10FFFF).

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_failure\fP (with error bit) if width_max is not long enough to convert.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_valid_not\fP (with error bit) if string is not a valid Unicode string.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
