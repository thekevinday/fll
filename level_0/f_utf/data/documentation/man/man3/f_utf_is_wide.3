.TH f_utf_is_wide "3" "July 2023" "FLL - Featureless Linux Library 0.6.8" "Library Functions"
.SH "NAME"
f_utf_is_wide
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_is_wide\fP(
    \fBconst f_string_t       \fP\fIsequence\fP,
    \fBconst f_array_length_t \fP\fIwidth_max\fP
);
.fi
.SH DESCRIPTION
.PP
Get whether or not the UTF-8 character is a wide character on display.
.PP
This is not the wide as in width in bytes that the codepoint takes up in UTF-8. Instead, this is the width in characters on the screen the character takes up. When "wide" characters that take up either 2 characters on render. When "narrow" characters that take up either 1 character on render.
.SH PARAMETERS
.TP
.B sequence
The (UTF-8) character.

.TP
.B width_max
The max width available for representing the UTF-8 character. There must be enough space in the character buffer to handle the Unicode width. It is recommended to always have 4 characters (4 uint8_t) of space available in character. This is the width in bytes the codepoint takes up in UTF-8.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_complete_not_utf\fP (with error bit set) if character is an incomplete UTF-8 sequence.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_fragment\fP (with error bit) if character is a UTF-8 fragment.
.br
\fBF_utf_not\fP (with error bit) if Unicode is an invalid Unicode character.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
