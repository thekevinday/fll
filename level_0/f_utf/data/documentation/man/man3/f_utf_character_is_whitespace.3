.TH f_utf_character_is_whitespace "3" "February 2024" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_utf_character_is_whitespace
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_character_is_whitespace\fP(
    \fBconst f_utf_char_t \fP\fIsequence\fP,
    \fBconst bool         \fP\fIstrict\fP
);
.fi
.SH DESCRIPTION
.PP
Check to see if the entire byte block of the character is an ASCII or UTF-8 general space character.
.PP
Non-printing or zero-width characters are not considered white space. This does include line separators like '
.PP
' (U+000A). This does not include phonetic spaces, like white space modifiers. This does not include non-true white space characters, such as Ogham Space Mark 'áš€' (U+1680).
.PP
Phonetic spaces are whitespaces with additional phonetic meaning associated with them. However, because they are not renderred as white space, they are technically not white space.
.SH PARAMETERS
.TP
.B sequence
The byte sequence to validate as a character.

.TP
.B strict
When TRUE, include all appropriate characters by type as per Unicode. When FALSE, non-white space characters that are treated as white space by Unicode are not treated as white space.

.SH RETURN VALUE
.PP
\fBF_true\fP if a UTF-8 white space.
.br
\fBF_false\fP if not a UTF-8 white space.
.br
\fBF_utf_fragment\fP (with error bit) if character is a UTF-8 fragment.
.br
\fBF_utf_not\fP (with error bit) if unicode is an invalid Unicode character.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_utf_character_is\fP(3), \fIf_utf_character_is_alphabetic\fP(3), \fIf_utf_character_is_alphabetic_digit\fP(3), \fIf_utf_character_is_alphabetic_numeric\fP(3), \fIf_utf_character_is_ascii\fP(3), \fIf_utf_character_is_combining\fP(3), \fIf_utf_character_is_control\fP(3), \fIf_utf_character_is_control_code\fP(3), \fIf_utf_character_is_control_format\fP(3), \fIf_utf_character_is_control_picture\fP(3), \fIf_utf_character_is_digit\fP(3), \fIf_utf_character_is_emoji\fP(3), \fIf_utf_character_is_fragment\fP(3), \fIf_utf_character_is_graph\fP(3), \fIf_utf_character_is_numeric\fP(3), \fIf_utf_character_is_phonetic\fP(3), \fIf_utf_character_is_private\fP(3), \fIf_utf_character_is_punctuation\fP(3), \fIf_utf_character_is_subscript\fP(3), \fIf_utf_character_is_superscript\fP(3), \fIf_utf_character_is_symbol\fP(3), \fIf_utf_character_is_unassigned\fP(3), \fIf_utf_character_is_valid\fP(3), \fIf_utf_character_is_whitespace\fP(3), \fIf_utf_character_is_whitespace_modifier\fP(3), \fIf_utf_character_is_whitespace_other\fP(3), \fIf_utf_character_is_whitespace_zero_width\fP(3), \fIf_utf_character_is_wide\fP(3), \fIf_utf_character_is_word\fP(3), \fIf_utf_character_is_word_dash\fP(3), \fIf_utf_character_is_word_dash_plus\fP(3), \fIf_utf_character_is_zero_width\fP(3), \fIisspace()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
