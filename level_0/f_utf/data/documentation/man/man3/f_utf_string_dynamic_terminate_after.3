.TH f_utf_string_dynamic_terminate_after "3" "July 2023" "FLL - Featureless Linux Library 0.6.9" "Library Functions"
.SH "NAME"
f_utf_string_dynamic_terminate_after
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_string_dynamic_terminate_after\fP(
    \fBf_utf_string_dynamic_t *const \fP\fIdestination\fP
);
.fi
.SH DESCRIPTION
.PP
Guarantee that an end of string (NULL) exists at the end of the string.
.PP
This ensures that the terminating NULL not only exists but is not counted in destination.used.
.PP
This is intended to be used for anything requiring NULL terminated strings whose used length cannot be counted. This will reallocate more space if necessary.
.PP
If destination size is 0, then it will be reallocated and have the NULL assigned at index 0.
.SH PARAMETERS
.TP
.B destination
The new string, which will be allocated or reallocated as necessary.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_string_too_large\fP (with error bit) if string is too large to fit into the buffer.
.br
Errors (with error bit) from: f_memory_resize().
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
