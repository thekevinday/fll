.TH f_utf_char_to_character "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_utf_char_to_character
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_char_to_character\fP(
    \fBconst f_string_t       \fP\fIcharacter\fP,
    \fBconst f_array_length_t \fP\fIwidth_max\fP,
    \fBf_utf_char_t          *\fP\fIcharacter_utf\fP
);
.fi
.SH DESCRIPTION
.PP
Convert an ASCII or UTF-8 character, stored as a string (character buffer), to the specialized f_utf_char_t type.
.SH PARAMETERS
.TP
.B character
The character string to be converted to the f_utf_char_t type. There must be enough space allocated to convert against, as limited by width_max.

.TP
.B width_max
The maximum width available for converting. Can be anything greater than 0.

.TP
.B character_utf
The generated character of type f_utf_char_t. This value may be cleared, even on error.

.SH RETURN VALUE
.PP
\fBF_none\fP if conversion was successful.
.br
\fBF_failure\fP (with error bit) if width is not long enough to convert.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_fragment\fP (with error bit) if character is a UTF-8 fragment.
.br
\fBF_utf_not\fP (with error bit) if unicode is an invalid Unicode character.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_utf_char_to_char\fP(3), \fIf_utf_char_to_character\fP(3), \fIf_utf_character_unicode_from\fP(3), \fIf_utf_character_unicode_string_to\fP(3), \fIf_utf_character_unicode_to\fP(3), \fIf_utf_unicode_from\fP(3), \fIf_utf_unicode_string_to\fP(3), \fIf_utf_unicode_to\fP(3)
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
