.TH f_utf_unicode_to "3" "February 2024" "FLL - Featureless Linux Library 0.6.10" "Library Functions"
.SH "NAME"
f_utf_unicode_to
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_unicode_to\fP(
    \fBconst f_string_t       \fP\fIcharacter\fP,
    \fBconst f_array_length_t \fP\fIwidth_max\fP,
    \fBuint32_t              *\fP\fIunicode\fP
);
.fi
.SH DESCRIPTION
.PP
Convert a given string block representing a single character into Unicode.
.SH PARAMETERS
.TP
.B character
The (UTF-8) character to convert to the Unicode representation. The f_utf_char_t is a 32-bit integer containing UTF-8 sequences, unchanged.

.TP
.B width_max
The max width available for representing the UTF-8 character. There must be enough space in the character buffer to handle the Unicode width. It is recommended to always have 4 characters (4 uint8_t) of space available in character.

.TP
.B unicode
A 32-bit integer representing the Unicode (such as U+0001). Does not need to be interpretted like UTF-8, this is a number from 0 onto max supported Unicode integer value (U+10FFFF).

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_failure\fP (with error bit) if width is not long enough to convert.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_utf_fragment\fP (with error bit) if character is a UTF-8 fragment.
.br
\fBF_utf_not\fP (with error bit) if unicode is an invalid Unicode character.
.SH SEE ALSO
.PP
.nh
.ad l
\fIf_utf_char_to_char\fP(3), \fIf_utf_char_to_character\fP(3), \fIf_utf_character_unicode_from\fP(3), \fIf_utf_character_unicode_string_to\fP(3), \fIf_utf_character_unicode_to\fP(3), \fIf_utf_unicode_from\fP(3), \fIf_utf_unicode_string_to\fP(3), \fIf_utf_unicode_to\fP(3), \fIf_utf_character_is_valid()\fP
.ad
.hy
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2024 Kevin Day, GNU LGPL Version 2.1 or later.
