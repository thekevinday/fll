.TH f_utf_character_is_word_dash_plus "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_utf_character_is_word_dash_plus
.SH SYNOPSIS
.nf
.B #include <fll/level_0/utf.h>
.sp
\fBf_status_t f_utf_character_is_word_dash_plus\fP(
    \fBconst f_utf_char_t \fP\fIsequence\fP,
    \fBconst bool         \fP\fIstrict\fP
);
.fi
.SH DESCRIPTION
.PP
Check to see if the entire byte block of the character is an ASCII or UTF-8 word, dash, or plus character.
.PP
A word dash plus character is alphabetic-decimal, an underscore '_', a dash '-', or a plus '+'.
.PP
Unicode appears to refer to dashes that connect words as a hyphen. Therefore, only these hyphens are considered dashes for the purposes of this function. All other dash-like Unicode characters are not considered a dash here. The dash here is intended for combining words, which matches the context of the Unicode "hyphen".
.PP
This does not include zero-width punctuation, such as "invisible plus" (U+2064) (even in strict mode).
.SH PARAMETERS
.TP
.B sequence
The byte sequence to validate as a character.

.TP
.B strict
When TRUE, include all appropriate characters by type as per Unicode. When FALSE, non-inline punctuation connectors are not considered a character (such as U+FE33 'ï¸³'). When FALSE, zero-width punctuation characters are not considered a character.

.SH RETURN VALUE
.PP
\fBF_true\fP if a UTF-8 word or dash character.
.br
\fBF_false\fP if not a UTF-8 word or dash character.
.br
\fBF_utf_fragment\fP (with error bit) if character is a UTF-8 fragment.
.br
\fBF_utf_not\fP (with error bit) if unicode is an invalid Unicode character.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
