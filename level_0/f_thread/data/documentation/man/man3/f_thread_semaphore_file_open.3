.TH f_thread_semaphore_file_open "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_thread_semaphore_file_open
.SH SYNOPSIS
.nf
.B #include <thread.h>
.sp
\fBf_status_t f_thread_semaphore_file_open\fP(
    \fBconst f_string_static_t \fP\fIname\fP,
    \fBconst int               \fP\fIflag\fP,
    \fBconst mode_t            \fP\fImode\fP,
    \fBunsigned int            \fP\fIvalue\fP,
    \fBf_thread_semaphore_t  **\fP\fIsemaphore\fP
);
.fi
.SH DESCRIPTION
.PP
Open or create a thread (named) semaphore file.
.SH PARAMETERS
.TP
.B name
The semaphore file name to create.

.TP
.B flag
The file create/open flags. Pass the O_CREATE flag to create the semaphore file.

.TP
.B mode
(optional) The file permissions to assign the semaphore. Ignored if O_CREAT is not used in flag. Ignored if the named semaphore already exists.

.TP
.B value
(optional) The value to initially assign the semaphore on creation. Ignored if O_CREAT is not used in flag. Ignored if the named semaphore already exists.

.TP
.B semaphore
The thread semaphore.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_access_denied\fP (with error bit) on access denied.
.br
\fBF_file_descriptor_max\fP (with error bit) if max file descrriptors was reached.
.br
\fBF_file_found\fP (with error bit) if the file was found and both the O_CREAT and O_EXCL flags are set.
.br
\fBF_file_open_max\fP (with error bit) too many open files.
.br
\fBF_file_found_not\fP (with error bit) if the file was not found and the O_CREAT is not set.
.br
\fBF_name_not\fP (with error bit) if file name is too long.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_supported_not\fP (with error bit) if the system does not support the process shared semaphore (shared == true).
.br
\fBF_memory_not\fP (with error bit) if out of memory.
.br
\fBF_failure\fP (with error bit) on any other error.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
