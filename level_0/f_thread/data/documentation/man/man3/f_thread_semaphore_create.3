.TH f_thread_semaphore_create "3" "July 2023" "FLL - Featureless Linux Library 0.6.6" "Library Functions"
.SH "NAME"
f_thread_semaphore_create
.SH SYNOPSIS
.nf
.B #include <thread.h>
.sp
\fBf_status_t f_thread_semaphore_create\fP(
    \fBconst bool                  \fP\fIshared\fP,
    \fBconst unsigned int          \fP\fIvalue\fP,
    \fBf_thread_semaphore_t *const \fP\fIsemaphore\fP
);
.fi
.SH DESCRIPTION
.PP
Create a thread semaphore.
.SH PARAMETERS
.TP
.B shared
If TRUE, then the semaphore is shared between processes (stored as posix shared memory, memory mapped, etc..). IF FALSE, then the semphore is shared between threads of a process (stored as a global variable or in the heap). Not all systems support semaphores shared amongst processes.

.TP
.B value
The value to initially assign the semaphore on creation.

.TP
.B semaphore
The semaphore to create.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_supported_not\fP (with error bit) if the system does not support the process shared semaphore (shared == true).
.br
\fBF_failure\fP (with error bit) on any other error.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
