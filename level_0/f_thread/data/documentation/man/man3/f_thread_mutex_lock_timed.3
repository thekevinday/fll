.TH f_thread_mutex_lock_timed "3" "July 2023" "FLL - Featureless Linux Library 0.6.7" "Library Functions"
.SH "NAME"
f_thread_mutex_lock_timed
.SH SYNOPSIS
.nf
.B #include <fll/level_0/thread.h>
.sp
\fBf_status_t f_thread_mutex_lock_timed\fP(
    \fBconst struct timespec *const \fP\fItimeout\fP,
    \fBf_thread_mutex_t *const      \fP\fImutex\fP
);
.fi
.SH DESCRIPTION
.PP
Lock the mutex, waiting for a set period of time to get the lock if already locked.
.PP
If the mutex is already locked and the timeout expires, then the lock attempt fails.
.PP
This is a blocking function (until timeout expires).
.SH PARAMETERS
.TP
.B timeout
The timeout.

.TP
.B mutex
The thread mutex.

.SH RETURN VALUE
.PP
\fBF_none\fP on success.
.br
\fBF_time\fP if the timeout was reached before obtaining the lock.
.br
\fBF_deadlock\fP (with error bit) if operation would cause a deadlock.
.br
\fBF_parameter\fP (with error bit) if a parameter is invalid.
.br
\fBF_prohibited\fP (with error bit) if not allowed to perform the operation.
.br
\fBF_recover_not\fP (with error bit) if the state protected by the mutex is not recoverable.
.br
\fBF_resource_not\fP (with error bit) if max mutex locks is reached.
.br
\fBF_dead\fP (with error bit) if the owning thread terminated while holding the mutex lock (thread is dead).
.br
\fBF_failure\fP (with error bit) on any other error.
.SH AUTHOR
Written by Kevin Day.
.SH COPYRIGHT
.PP
Copyright \(co 2007-2023 Kevin Day, GNU LGPL Version 2.1 or later.
