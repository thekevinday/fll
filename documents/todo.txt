# fss-0002

FLL-wide To Do Notes:
  - Research/Implement optimizaton by using pointers to reduce the complexity of processing multi-depth structures, such as fss_nest:
    this:
      nests->array[nests->used].array[index].array[0] = xxx;
    could become:
      *current = nests->array[nests->used].array[index].array;
      current->array[0] = xxx;
    The idea is that in the first case, thee is a lot more dereferencing needing to be performed whereas the second case, the massive dereferencing happens only the first time and then all subsequent calls have simpler dereferencing.

   * Programs to create:
   * - document: the documentation is built/processed/generated.
   * - finish: the project is installed.
   * - coverage: the project has tests run against it.

  - F_STATUS_XX could be the error code for the program on exit, such that +s, ++status is a new standard parameter for specifying the variable name.
    Variable name will be made uppercase and will be only alphabetic or underscore.

  Go back through all existing f_file and f_directory code, updating return codes and respective documentation.
  Update f_utf_file and create a f_utf_directory?

  Fix recursive functions to be consistent and all have max recursion lengths just like the *_all() file functions.
